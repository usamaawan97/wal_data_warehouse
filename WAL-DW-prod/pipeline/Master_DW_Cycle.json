{
	"name": "Master_DW_Cycle",
	"properties": {
		"activities": [
			{
				"name": "DW_Reload_Cycle",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "GetEmailList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "DW_Reload_Cycle",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "GetEmailList",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Update_Oauth_Access_Token_DB",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT InterfaceSuccessAlertEmails,InterfaceFailureAlertEmails FROM dbo.DW_Interface_Setup",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Tab_DW_Interface_Setup",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Send Failure Email Reload",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "DW_Reload_Cycle",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "https://prod-26.uksouth.logic.azure.com:443/workflows/660cbc90a51a40dab53e76f370f74e70/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=rslDaEeWOQuFduFl-Q7zq0CcPvzeZBaVvKrOXGfeAak",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{\n    \"title\": \"@{activity('DW_Reload_Cycle').output.pipelineName} FAILED!\",\n    \"message\": \"Error: @{activity('DW_Reload_Cycle').error.message}\",\n    \"color\": \"Red\",\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"pipelineName\": \"@{activity('DW_Reload_Cycle').output.pipelineName}\",\n    \"pipelineRunId\": \"@{activity('DW_Reload_Cycle').output.pipelineRunId}\",\n    \"time\": \"@{utcnow()}\",\n   \"recipientEmailAddress\":\"@{activity('GetEmailList').output.firstRow.InterfaceFailureAlertEmails}\"\n    }",
						"type": "Expression"
					}
				}
			},
			{
				"name": "DW_Incremental_Cycle",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "GetEmailList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "DW_Incremental_Cycle",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Send Failure Email Incremental",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "DW_Incremental_Cycle",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "https://prod-26.uksouth.logic.azure.com:443/workflows/660cbc90a51a40dab53e76f370f74e70/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=rslDaEeWOQuFduFl-Q7zq0CcPvzeZBaVvKrOXGfeAak",
						"type": "Expression"
					},
					"method": "POST",
					"body": {
						"value": "{\n    \"title\": \"@{activity('DW_Incremental_Cycle').output.pipelineName} FAILED!\",\n    \"message\": \"Error: @{activity('DW_Incremental_Cycle').error.message}\",\n    \"color\": \"Red\",\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"pipelineName\": \"@{activity('DW_Incremental_Cycle').output.pipelineName}\",\n    \"pipelineRunId\": \"@{activity('DW_Incremental_Cycle').output.pipelineRunId}\",\n    \"time\": \"@{utcnow()}\",\n   \"recipientEmailAddress\":\"@{activity('GetEmailList').output.firstRow.InterfaceFailureAlertEmails}\"\n    }",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get_BC_Access_Token",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get_Oauth_Service_Configuration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@activity('Get_Oauth_Service_Configuration').output.firstRow.ServiceURL",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-type": {
							"value": "@activity('Get_Oauth_Service_Configuration').output.firstRow.ContentType",
							"type": "Expression"
						}
					},
					"body": {
						"value": "grant_type=@{activity('Get_Oauth_Service_Configuration').output.firstRow.GrantType}\n&client_id=@{activity('Get_Oauth_Service_Configuration').output.firstRow.ClientID}\n&client_secret=@{activity('Get_Oauth_Service_Configuration').output.firstRow.ClientSecret}\n&scope=@{activity('Get_Oauth_Service_Configuration').output.firstRow.Scope}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get_Oauth_Service_Configuration",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[Get_Oauth_Service_Configuration]",
						"storedProcedureParameters": {
							"ServiceCode": {
								"type": "String",
								"value": "GetOauthConfig"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Tab_DW_Oauth_Config",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Update_Oauth_Access_Token_DB",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Get_BC_Access_Token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 60,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[Update_Oauth_Access_Token]",
					"storedProcedureParameters": {
						"AccessToken": {
							"value": {
								"value": "@activity('Get_BC_Access_Token').output.access_token",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DwWalProd",
					"type": "LinkedServiceReference"
				}
			}
		],
		"folder": {
			"name": "Datawarehouse"
		},
		"annotations": []
	}
}